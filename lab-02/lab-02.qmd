---
title: "lab-02"
subtitle: 'Border Summaries'
author:
  - name: Matthew Woodworth
    email: mattwood@colostate.edu
format:
  html:
    code-fold: true
    toc: true
    include-before-body: ../slides/header.html
    include-after-body:  ../slides/footer-annotations.html
---
```{r}
remotes::install_github("ropensci/USAboundaries")
remotes::install_github("ropensci/USAboundariesData")
```

```{r}
remotes::install_github("ropenscilabs/rnaturalearthdata")
```

```{r}
install.packages("gghighlight")
install.packages("ggrepel")
```

```{r}
# spatial data science
library(tidyverse)
library(sf)
library(units)

# Data
library(USAboundaries)
library(rnaturalearth)

# Visualization
library(gghighlight)
library(ggrepel)
library(knitr)
```

******

# Question 1: 

For this lab we need three (3) datasets. 

  1. Spatial boundaries of continental USA states (1.1) 
  2. Boundaries of Canada, Mexico and the United States (1.2)
  3. All USA cites (1.3)
  
  
### _1.1_ Define a Projection

For this lab we want to calculate distances between features, therefore we need a projection that preserves distance at the scale of CONUS. For this, we will use the North America Equidistant Conic:

```{r}
eqdc <- '+proj=eqdc +lat_0=40 +lon_0=-96 +lat_1=20 +lat_2=60 +x_0=0 +y_0=0 +datum=NAD83 +units=m +no_defs'
```

This PROJ.4 string defines an Equidistant Conic projection with the following parameters:\

  +proj=eqdc → Equidistant Conic projection\
  +lat_0=40 → Latitude of the projection's center (40°N)\
  +lon_0=-96 → Central meridian (96°W)\
  +lat_1=20 → First standard parallel (20°N)\
  +lat_2=60 → Second standard parallel (60°N)\
  +x_0=0 → False easting (0 meters)\
  +y_0=0 → False northing (0 meters)\
  +datum=NAD83 → Uses the North American Datum 1983 (NAD83)\
  +units=m → Units are in meters\
  +no_defs → No additional default parameters from PROJ’s database\

This projection is commonly used for mapping large areas with an east-west extent, especially in North America, as it balances distortion well between the two standard parallels.

### _1.2_ - Get USA state boundaries 

- USA state boundaries can be accessed with `USAboundaries::us_states(resolution = "low")`. Given the precision needed for this analysis we are ok with the low resolution. 
- Make sure you only have the states in the continental United States (CONUS) (**Hint** use `filter`)
- Make sure the data is in a projected coordinate system suitable for distance measurements at the national scale (`eqdc`). 

*****

### _1.3_ - Get country boundaries for Mexico, the United States of America, and Canada

In R, country boundaries are stored in the `rnaturalearth` package.

Once installed: 

- World boundaries can be accessed with `rnaturalearth::countries110`. 
- Make sure the data is in simple features (`sf`) format (**Hint** use the `st_as_sf` variable).
- Make sure you only have the countries you want (**Hint** `filter` on the `admin` variable)
- Make sure the data is in a projected coordinate system suitable for distance measurements at the national scale (`eqdc`). 

```{r}
states <- USAboundaries::us_states(resolution = "low") %>%  
  filter(!state_abbr %in% c("HI", "AK", "PR")) %>% 
  st_transform(eqdc)

# USA State Boundaries
countries <- rnaturalearth::countries110 %>% 
  st_transform(eqdc) 
```
